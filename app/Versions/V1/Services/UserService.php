<?php

namespace App\Versions\V1\Services;

use App\Events\UserRegistered;
use App\Models\User;
use App\Versions\V1\DTO\Users\UserDTO;
use Illuminate\Support\Str;

class UserService
{
    public const PASSWORD_LENGTH = 9;

    public function firstOrCreate(UserDTO $userDTO)
    {
        return User::query()
            ->where('email', $userDTO->email)
            ->firstOr(fn () => $this->create($userDTO));
    }

    public function create(UserDTO $userDTO): User
    {
        [$password, $passwordIsAutoGenerated] = $this->checkPassword($userDTO);

        $user = new User();
        $user->fill(array_merge($userDTO->toArray(), ['password' => bcrypt($password)]));
        $user->save();

        event(new UserRegistered($user, $password, $passwordIsAutoGenerated));

        return $user;
    }

    private function checkPassword(UserDTO $userDTO): array
    {
        if ($userDTO->password) {
            return [$userDTO->password, false];
        }

        return [Str::random(self::PASSWORD_LENGTH), true];
    }
}
